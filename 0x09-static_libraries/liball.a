!<arch>
0-isupper.c/    0           0     0     644     237       `
#include "main.h"
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

/**
 * _isupper - observed function.
 * @c: input argument.
 * Return: integer.
 */
int _isupper(int c)
{
	return (c >= 'A' && c <= 'Z');
}

0-memset.c/     0           0     0     644     306       `
#include "main.h"
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

/**
 * _memset - observed function.
 * @s: input argument.
 * @b: input argument.
 * @n: input argument.
 * Return: character.
 */
char *_memset(char *s, char b, unsigned int n)
{
	return (memset(s, b, n));
}
0-strcat.c/     0           0     0     644     280       `
#include "main.h"
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

/**
 * _strcat - observed function.
 * @dest: input argument.
 * @src: input argument.
 * Return: character.
 */
char *_strcat(char *dest, char *src)
{
	return (strcat(dest, src));
}
100-atoi.c/     0           0     0     644     220       `
#include "main.h"
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

/**
 * _atoi - observed function.
 * @s: input argument.
 * Return: integer.
 */
int _atoi(char *s)
{
	return (atoi(s));
}
1-isdigit.c/    0           0     0     644     227       `
#include "main.h"
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

/**
 * _isdigit - observed argument.
 * @c: input argument.
 * Return: integer.
 */
int _isdigit(int c)
{
	return (isdigit(c));
}

1-memcpy.c/     0           0     0     644     246       `
#include <string.h>

/**
 * _memcpy - observed function.
 * @dest: input argument.
 * @src: input argument.
 * @n: input argument.
 * Return: character.
 */
char *_memcpy(char *dest, char *src, unsigned int n)
{
	return (memcpy(dest, src, n));
}
1-strncat.c/    0           0     0     644     316       `
#include "main.h"
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

/**
 * _strncat - observed function.
 * @dest: input argument.
 * @src: input argument.
 * @n: input argument.
 * Return: character.
 */
char *_strncat(char *dest, char *src, int n)
{
	return (strncat(dest, src, n));
}
2-strchr.c/     0           0     0     644     265       `
#include "main.h"
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

/**
 * _strchr - observed function.
 * @s: input argument.
 * @c: input argumnet.
 * Return: character.
 */
char *_strchr(char *s, char *c)
{
	return (strchr(s, c));
}

2-strlen.c/     0           0     0     644     226       `
#include "main.h"
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

/**
 * _strlen - observed function.
 * @s: input argument.
 * Return: integer.
 */
int _strlen(char *s)
{
	return (strlen(s));
}
2-strncpy.c/    0           0     0     644     298       `
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

/**
 * _strncpy - observed function.
 * @dest: input argument.
 * @src: input argument.
 * @n: input argument.
 * Return: character.
 */
char *_strncpy(char *dest, char *src, int n)
{
	return (strncpy(dest, src, n));
}
3-islower.c/    0           0     0     644     236       `
#include "main.h"
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

/**
 * _islower - observed function.
 * @c: input argument.
 * Return: integer
 */
int _islower(int c)
{
	return (c >= 'a' && c <= 'z');
}
3-puts.c/       0           0     0     644     191       `
#include "main.h"
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

/**
 * _puts - observed function.
 * @s: input argument
 */
void _puts(char *s)
{
	puts(s);
}

3-strcmp.c/     0           0     0     644     267       `
#include "main.h"
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

/**
 * _strcmp - observed function.
 * @s1: input argument.
 * @s2: input argument.
 * Return: integer.
 */
int _strcmp(char *s1, char *s2)
{
	return (strcmp(s1, s2));
}

3-strspn.c/     0           0     0     644     289       `
#include "main.h"
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

/**
 * _strspn - observed function.
 * @s: input argument.
 * @accept: input argument.
 * Return: unsigned int
 */
unsigned int _strspn(char *s, char *accept)
{
	return (strspn(s, accept));
}

4-isalpha.c/    0           0     0     644     227       `
#include "main.h"
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

/**
 * _isalpha - observed function.
 * @c: input argument.
 * Return: integer.
 */
int _isalpha(int c)
{
	return (isalpha(c));
}

4-strpbrk.c/    0           0     0     644     284       `
#include "main.h"
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

/**
 * _strpbrk - character function.
 * @s: input argument.
 * @accept: input argument.
 * Return: character.
 */
char *_strpbrk(char *s, char *accept)
{
	return (strpbrk(s, accept));
}
5-strstr.c/     0           0     0     644     305       `
#include "main.h"
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

/**
 * _strstr - string to string.
 * @haystack: input argument.
 * @needle: input argument
 * Return: character coded.
 */
char *_strstr(char *haystack, char *needle)
{
	return (strstr(haystack, needle));
}

6-abs.c/        0           0     0     644     215       `
#include "main.h"
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

/**
 * _abs - observed argument.
 * @n: input argument.
 * Return: integer.
 */
int _abs(int n)
{
	return (abs(n));
}

9-strcpy.c/     0           0     0     644     280       `
#include "main.h"
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

/**
 * _strcpy - observed function.
 * @dest: input argument.
 * @src: input argument.
 * Return: character.
 */
char *_strcpy(char *dest, char *src)
{
	return (strcpy(dest, src));
}
main.c/         0           0     0     644     182       `
/**
 * main - observed function.
 * Return: integer 0.
 */
int main(void)
{
	_puts("\"At the end of the day, my goal was to be the best hacker\"\n\t- Kevin Mitnick");
	return (0);
}
_putchar.c/     0           0     0     644     247       `
#include <unistd.h>

/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 *
 * Return: On success 1.
 * On error, -1 is returned, and errno is set appropriately.
 */
int _putchar(char c)
{
	return (write(1, &c, 1));
}

